# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

name: Release

on:
    workflow_dispatch:

jobs:
    build_packages:
        strategy:
            matrix:
                board: [stm32h735g-dk, stm32h747i-disco]

        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
              with:
                sparse-checkout: ${{ matrix.board }}
            - name: build source package
              run: |
                  mv ${{ matrix.board }} slint-cpp-template-${{ matrix.board }}
                  zip -r slint-cpp-template-${{ matrix.board }}.zip slint-cpp-template-${{ matrix.board }}/
            - name: "Upload extension artifact"
              uses: actions/upload-artifact@v4
              with:
                  name: slint-cpp-template-${{ matrix.board }}
                  path: slint-cpp-template-${{ matrix.board }}.zip

    test_packages:
        strategy:
            matrix:
                os: [ubuntu-20.04, macOS-12, windows-2022]
                board: [stm32h735g-dk, stm32h747i-disco]

        needs: [build_packages]
        runs-on: ${{ matrix.os }}
        steps:
        - uses: actions/download-artifact@v4
          with:
            name: slint-cpp-template-${{ matrix.board }}
        - name: extract archive
          run: |
              unzip slint-cpp-template-${{ matrix.board }}.zip
        - uses: seanmiddleditch/gha-setup-ninja@v5
        - name: Install GNU Arm Embedded Toolchain
          uses: carlosperate/arm-none-eabi-gcc-action@v1
          with:
            release: '13.3.Rel1'
        - name: CMake configure
          working-directory: slint-cpp-template-${{ matrix.board }}
          run: |
              cmake --preset Debug
        - name: CMake build
          working-directory: slint-cpp-template-${{ matrix.board }}
          run: |
              cmake --build --preset Debug

    create_release:
        needs: [test_packages]
        runs-on: ubuntu-22.04
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
        - uses: actions/checkout@v4
        - name: Download all artifacts
          uses: actions/download-artifact@v4
        #- name: Create GitHub Release
        #  run: |
        #    gh release create nightly \
        #        --repo ${{ github.repository }} \
        #        --title "Nightly" \
        #        --prerelease
        - name: Upload Release Assets
          run: |
            gh release upload nightly slint-cpp-template-*/slint-cpp-template-*.zip --repo ${{ github.repository }} --clobber

